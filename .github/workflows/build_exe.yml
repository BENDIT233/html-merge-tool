name: Build Windows Executable

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller
        echo "Dependencies installed successfully"

    - name: Build executable
      run: |
        # Build windowed version
        pyinstaller --onedir --windowed --noupx --clean app.py
        if (Test-Path "dist/app.exe") {
          echo "Executable built successfully"
          # Rename the executable
          Rename-Item -Path "dist/app.exe" -NewName "html_merge_tool.exe"
        } else {
          echo "Failed to build executable"
          # List current directory structure for debugging
          Get-ChildItem -Path . -Recurse
          exit 1
        }

    - name: Test executable
      run: |
        # Find the executable in the dist directory
        $exePath = Get-ChildItem -Path dist -Filter "html_merge_tool.exe" -Recurse | Select-Object -First 1 -ExpandProperty FullName
        
        if ($exePath -and (Test-Path $exePath)) {
          Write-Host "Testing executable at: $exePath"
          # For GUI applications, we can't easily test via command line
          # We'll just verify the file exists and is executable
          echo "Executable test passed"
        } else {
          echo "Executable not found in dist directory"
          # List contents of dist for debugging
          Get-ChildItem -Path dist -Recurse
          exit 1
        }

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: html-merge-tool-exe
        path: dist/html_merge_tool.exe